openapi: 3.0.0
info:
  title: AI/ML API Documentation
  description: >-
    =K Welcome to the [AI/ML API](https://aimlapi.com/) docs! AI/ML API makes
    integrating state-of-the-art AI models into your applications effortless,
    offering seamless compatibility with OpenAI-like interfaces.


    **Features Include:**


    - **Inference**: Easily evaluate models for text, images, and more using our
    API.
        
    - **API Key Management**: Securely manage your API keys for controlled
    access.
        
    - **Broad Model Selection**: Access a diverse range of models for various AI
    tasks.
        

    See Quickstart
  version: 1.0.0
servers:
  - url: http://{{baseurl}}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
tags:
  - name: API Key Management
    description: >-
      ## **Creating an API Key**


      To create a new API key Sign-ip to
      [app.aimlapi.com](https://app.aimlapi.com), navigate to Key Management
      page and create an API Key


      Note that your Keys only work with an Active Subscription


      ## **Disabling an API Key**


      If you need to revoke access temporarily, disable an API key by:


      - Sending a PUT request to `/service/api-keys/{id}/disable`, replacing
      `{id}` with the key's unique identifier.
          
      - This will change the key's status to inactive.
          

      ## **Enabling an API Key**


      To restore access using a previously disabled API key:


      - Send a PUT request to `/service/api-keys/{id}/enable`, replacing `{id}`
      with the key's unique identifier.
          
      - The key's status will be updated to active.
          

      ## **Best Practices**


      - Regularly review and manage your API keys to ensure optimal security.
          
      - Use separate keys for different services or environments to limit the
      scope of access.
          
      - Rotate your API keys periodically to reduce the risk of unauthorized
      use.
          

      By effectively managing your API keys, you maintain control over who can
      access your AI/ML API services and safeguard your resources.
  - name: Models
    description: >-
      List and describe the various models available in the API. You can refer
      to the [Models](https://aimlapi.com/models) documentation to understand
      what models are available and the differences between them.


      AI/ML API provides a suite of powerful, serverless models for seamless
      integration into your applications.


      **Chat Models**  

      Leverage our sophisticated Chat Models for real-time conversation
      interfaces.


      | Organization | Model Name | Model String for API | Context length |

      | --- | --- | --- | --- |

      | 01.AI | 01-ai Yi Chat (34B) | zero-one-ai/Yi-34B-Chat | 4096 |

      | Austism | Chronos Hermes (13B) | Austism/chronos-hermes-13b | 2048 |

      | DeepSeek | Deepseek Coder Instruct (33B) |
      deepseek-ai/deepseek-coder-33b-instruct | 16384 |

      | garage-bAInd | Platypus2 Instruct (70B) |
      garage-bAInd/Platypus2-70B-instruct | 4096 |

      | Google | Gemma Instruct (2B) | google/gemma-2b-it | 8192 |

      | Google | Gemma Instruct (7B) | google/gemma-7b-it | 8192 |

      | Gryphe | MythoMax-L2 (13B) | Gryphe/MythoMax-L2-13b | 4096 |

      | LM Sys | Vicuna v1.5 (13B) | lmsys/vicuna-13b-v1.5 | 4096 |

      | LM Sys | Vicuna v1.5 (7B) | lmsys/vicuna-7b-v1.5 | 4096 |

      | Meta | Code Llama Instruct (13B) | codellama/CodeLlama-13b-Instruct-hf |
      16384 |

      | Meta | Code Llama Instruct (34B) | codellama/CodeLlama-34b-Instruct-hf |
      16384 |

      | Meta | Code Llama Instruct (70B) | codellama/CodeLlama-70b-Instruct-hf |
      4096 |

      | Meta | Code Llama Instruct (7B) | codellama/CodeLlama-7b-Instruct-hf |
      16384 |

      | Meta | LLaMA-2 Chat (70B) | meta-llama/Llama-2-70b-chat-hf | 4096 |

      | Meta | LLaMA-2 Chat (13B) | meta-llama/Llama-2-13b-chat-hf | 4096 |

      | Meta | LLaMA-2 Chat (7B) | meta-llama/Llama-2-7b-chat-hf | 4096 |

      | mistralai | Mistral (7B) Instruct | mistralai/Mistral-7B-Instruct-v0.1 |
      4096 |

      | mistralai | Mistral (7B) Instruct v0.2 |
      mistralai/Mistral-7B-Instruct-v0.2 | 32768 |

      | mistralai | Mixtral-8x7B Instruct (46.7B) |
      mistralai/Mixtral-8x7B-Instruct-v0.1 | 32768 |

      | NousResearch | Nous Capybara v1.9 (7B) |
      NousResearch/Nous-Capybara-7B-V1p9 | 8192 |

      | NousResearch | Nous Hermes 2 - Mixtral 8x7B-DPO (46.7B) |
      NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO | 32768 |

      | NousResearch | Nous Hermes 2 - Mixtral 8x7B-SFT (46.7B) |
      NousResearch/Nous-Hermes-2-Mixtral-8x7B-SFT | 32768 |

      | NousResearch | Nous Hermes LLaMA-2 (7B) |
      NousResearch/Nous-Hermes-llama-2-7b | 4096 |

      | NousResearch | Nous Hermes Llama-2 (13B) |
      NousResearch/Nous-Hermes-Llama2-13b | 4096 |

      | NousResearch | Nous Hermes-2 Yi (34B) |
      NousResearch/Nous-Hermes-2-Yi-34B | 4096 |

      | OpenChat | OpenChat 3.5 (7B) | openchat/openchat-3.5-1210 | 8192 |

      | OpenOrca | OpenOrca Mistral (7B) 8K | Open-Orca/Mistral-7B-OpenOrca |
      8192 |

      | Qwen | Qwen-Chat (7B) | togethercomputer/Qwen-7B-Chat | 8192 |

      | Qwen | Qwen 1.5 Chat (0.5B) | Qwen/Qwen1.5-0.5B-Chat | 32768 |

      | Qwen | Qwen 1.5 Chat (1.8B) | Qwen/Qwen1.5-1.8B-Chat | 32768 |

      | Qwen | Qwen 1.5 Chat (4B) | Qwen/Qwen1.5-4B-Chat | 32768 |

      | Qwen | Qwen 1.5 Chat (7B) | Qwen/Qwen1.5-7B-Chat | 32768 |

      | Qwen | Qwen 1.5 Chat (14B) | Qwen/Qwen1.5-14B-Chat | 32768 |

      | Qwen | Qwen 1.5 Chat (72B) | Qwen/Qwen1.5-72B-Chat | 4096 |

      | Snorkel AI | Snorkel Mistral PairRM DPO (7B) |
      snorkelai/Snorkel-Mistral-PairRM-DPO | 32768 |

      | Stanford | Alpaca (7B) | togethercomputer/alpaca-7b | 2048 |

      | Teknium | OpenHermes-2-Mistral (7B) | teknium/OpenHermes-2-Mistral-7B |
      8192 |

      | Teknium | OpenHermes-2.5-Mistral (7B) |
      teknium/OpenHermes-2p5-Mistral-7B | 8192 |

      | TII UAE | Falcon Instruct (40B) | togethercomputer/falcon-40b-instruct |
      2048 |

      | TII UAE | Falcon Instruct (7B) | togethercomputer/falcon-7b-instruct |
      2048 |

      | Together | LLaMA-2-7B-32K-Instruct (7B) |
      togethercomputer/Llama-2-7B-32K-Instruct | 32768 |

      | Together | RedPajama-INCITE Chat (3B) |
      togethercomputer/RedPajama-INCITE-Chat-3B-v1 | 2048 |

      | Together | RedPajama-INCITE Chat (7B) |
      togethercomputer/RedPajama-INCITE-7B-Chat | 2048 |

      | Together | StripedHyena Nous (7B) |
      togethercomputer/StripedHyena-Nous-7B | 32768 |

      | Undi95 | ReMM SLERP L2 (13B) | Undi95/ReMM-SLERP-L2-13B | 4096 |

      | Undi95 | Toppy M (7B) | Undi95/Toppy-M-7B | 4096 |

      | WizardLM | WizardLM v1.2 (13B) | WizardLM/WizardLM-13B-V1.2 | 4096 |

      | upstage | Upstage SOLAR Instruct v1 (11B) |
      upstage/SOLAR-10.7B-Instruct-v1.0 | 4096 |


      **Code Models**  

      Access our Code Models to automate coding tasks, bug fixes, or code
      generation.


      | Organization | Model Name | Model String for API | Context length |

      | --- | --- | --- | --- |

      | Meta | Code Llama Python (70B) | codellama/CodeLlama-70b-Python-hf |
      4096 |

      | Meta | Code Llama Python (34B) | codellama/CodeLlama-34b-Python-hf |
      16384 |

      | Meta | Code Llama Python (13B) | codellama/CodeLlama-13b-Python-hf |
      16384 |

      | Meta | Code Llama Python (7B) | codellama/CodeLlama-7b-Python-hf | 16384
      |

      | Phind | Phind Code LLaMA v2 (34B) | Phind/Phind-CodeLlama-34B-v2 | 16384
      |

      | WizardLM | WizardCoder Python v1.0 (34B) |
      WizardLM/WizardCoder-Python-34B-V1.0 | 8192 |

      | WizardLM | WizardCoder v1.0 (15B) | WizardLM/WizardCoder-15B-V1.0 | 8192
      |


      **Image Models**  

      Explore creative boundaries with our Image Models, perfect for generating
      or editing visuals.


      | Organization | Model Name | Model String for API |

      | --- | --- | --- |

      | Prompt Hero | Openjourney v4 | prompthero/openjourney |

      | Runway ML | Stable Diffusion 1.5 | runwayml/stable-diffusion-v1-5 |

      | SG161222 | Realistic Vision 3.0 | SG161222/Realistic_Vision_V3.0_VAE |

      | Stability AI | Stable Diffusion 2.1 | stabilityai/stable-diffusion-2-1 |

      | Stability AI | Stable Diffusion XL 1.0 |
      stabilityai/stable-diffusion-xl-base-1.0 |

      | Wavymulder | Analog Diffusion | wavymulder/Analog-Diffusion |


      **Model Request**  

      Can't find the model you need? Join our [Discord
      community](https://discord.gg/vayNtU9ThM) to propose new models for
      integration into our API offerings. Your contributions help us grow and
      serve you better.


      For a complete list of models and their identifiers, refer to the table
      provided in the API documentation.
  - name: Threads
  - name: Threads > Runs
  - name: Threads > Messages
  - name: Assistants
  - name: Chat
  - name: Images
    description: Given a prompt and/or an input image, the model will generate a new image.
  - name: '[WIP] Completions'
  - name: Voice
paths:
  /api-keys/{id}/disable:
    put:
      tags:
        - API Key Management
      summary: Disable API Key
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /api-keys/{id}/enable:
    put:
      tags:
        - API Key Management
      summary: Enable API Key
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /models:
    get:
      tags:
        - Models
      summary: List models
      description: >-
        Lists the currently available engines, and provides basic information
        about each one such as the owner and availability.
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Length:
              schema:
                type: integer
                example: '6976'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Mon, 22 Apr 2024 11:59:44 GMT
            Etag:
              schema:
                type: string
                example: W/"1b40-V7WXU699F8zl8h8c2ur/iCcz0FA"
            X-Powered-By:
              schema:
                type: string
                example: Express
          content:
            application/json:
              schema:
                type: object
              example:
                zero-one-ai/Yi-34B-Chat: together.ai
                allenai/OLMo-7B-Instruct: together.ai
                allenai/OLMo-7B-Twin-2T: together.ai
                allenai/OLMo-7B: together.ai
                Austism/chronos-hermes-13b: together.ai
                cognitivecomputations/dolphin-2.5-mixtral-8x7b: together.ai
                deepseek-ai/deepseek-coder-33b-instruct: together.ai
                deepseek-ai/deepseek-llm-67b-chat: together.ai
                garage-bAInd/Platypus2-70B-instruct: together.ai
                google/gemma-2b-it: together.ai
                google/gemma-7b-it: together.ai
                Gryphe/MythoMax-L2-13b: together.ai
                lmsys/vicuna-13b-v1.5: together.ai
                lmsys/vicuna-7b-v1.5: together.ai
                codellama/CodeLlama-13b-Instruct-hf: together.ai
                codellama/CodeLlama-34b-Instruct-hf: together.ai
                codellama/CodeLlama-70b-Instruct-hf: together.ai
                codellama/CodeLlama-7b-Instruct-hf: together.ai
                meta-llama/Llama-2-70b-chat-hf: together.ai
                meta-llama/Llama-2-13b-chat-hf: together.ai
                meta-llama/Llama-2-7b-chat-hf: together.ai
                mistralai/Mistral-7B-Instruct-v0.1: together.ai
                mistralai/Mistral-7B-Instruct-v0.2: together.ai
                mistralai/Mixtral-8x7B-Instruct-v0.1: together.ai
                NousResearch/Nous-Capybara-7B-V1p9: together.ai
                NousResearch/Nous-Hermes-2-Mistral-7B-DPO: together.ai
                NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO: together.ai
                NousResearch/Nous-Hermes-2-Mixtral-8x7B-SFT: together.ai
                NousResearch/Nous-Hermes-llama-2-7b: together.ai
                NousResearch/Nous-Hermes-Llama2-13b: together.ai
                NousResearch/Nous-Hermes-2-Yi-34B: together.ai
                openchat/openchat-3.5-1210: together.ai
                Open-Orca/Mistral-7B-OpenOrca: together.ai
                Qwen/Qwen1.5-0.5B-Chat: together.ai
                Qwen/Qwen1.5-1.8B-Chat: together.ai
                Qwen/Qwen1.5-4B-Chat: together.ai
                Qwen/Qwen1.5-7B-Chat: together.ai
                Qwen/Qwen1.5-14B-Chat: together.ai
                Qwen/Qwen1.5-72B-Chat: together.ai
                snorkelai/Snorkel-Mistral-PairRM-DPO: together.ai
                togethercomputer/alpaca-7b: together.ai
                teknium/OpenHermes-2-Mistral-7B: together.ai
                teknium/OpenHermes-2p5-Mistral-7B: together.ai
                togethercomputer/Llama-2-7B-32K-Instruct: together.ai
                togethercomputer/RedPajama-INCITE-Chat-3B-v1: together.ai
                togethercomputer/RedPajama-INCITE-7B-Chat: together.ai
                togethercomputer/StripedHyena-Nous-7B: together.ai
                Undi95/ReMM-SLERP-L2-13B: together.ai
                Undi95/Toppy-M-7B: together.ai
                WizardLM/WizardLM-13B-V1.2: together.ai
                upstage/SOLAR-10.7B-Instruct-v1.0: together.ai
                zero-one-ai/Yi-34B: together.ai
                zero-one-ai/Yi-6B: together.ai
                google/gemma-2b: together.ai
                google/gemma-7b: together.ai
                meta-llama/Llama-2-70b-hf: together.ai
                meta-llama/Llama-2-13b-hf: together.ai
                meta-llama/Llama-2-7b-hf: together.ai
                microsoft/phi-2: together.ai
                Nexusflow/NexusRaven-V2-13B: together.ai
                Qwen/Qwen1.5-0.5B: together.ai
                Qwen/Qwen1.5-1.8B: together.ai
                Qwen/Qwen1.5-4B: together.ai
                Qwen/Qwen1.5-7B: together.ai
                Qwen/Qwen1.5-14B: together.ai
                Qwen/Qwen1.5-72B: together.ai
                togethercomputer/GPT-JT-Moderation-6B: together.ai
                togethercomputer/LLaMA-2-7B-32K: together.ai
                togethercomputer/RedPajama-INCITE-Base-3B-v1: together.ai
                togethercomputer/RedPajama-INCITE-7B-Base: together.ai
                togethercomputer/RedPajama-INCITE-Instruct-3B-v1: together.ai
                togethercomputer/RedPajama-INCITE-7B-Instruct: together.ai
                togethercomputer/StripedHyena-Hessian-7B: together.ai
                mistralai/Mistral-7B-v0.1: together.ai
                mistralai/Mixtral-8x7B-v0.1: together.ai
                codellama/CodeLlama-70b-Python-hf: together.ai
                codellama/CodeLlama-34b-Python-hf: together.ai
                codellama/CodeLlama-13b-Python-hf: together.ai
                codellama/CodeLlama-7b-Python-hf: together.ai
                Phind/Phind-CodeLlama-34B-v2: together.ai
                WizardLM/WizardCoder-Python-34B-V1.0: together.ai
                Meta-Llama/Llama-Guard-7b: together.ai
                togethercomputer/evo-1-8k-base: together.ai
                togethercomputer/evo-1-131k-base: together.ai
                databricks/dolly-v2-12b: together.ai
                databricks/dolly-v2-3b: together.ai
                databricks/dolly-v2-7b: together.ai
                DiscoResearch/DiscoLM-mixtral-8x7b-v2: together.ai
                HuggingFaceH4/zephyr-7b-beta: together.ai
                HuggingFaceH4/starchat-alpha: together.ai
                OpenAssistant/oasst-sft-4-pythia-12b-epoch-3.5: together.ai
                OpenAssistant/stablelm-7b-sft-v7-epoch-3: together.ai
                togethercomputer/Koala-13B: together.ai
                togethercomputer/Koala-7B: together.ai
                lmsys/vicuna-13b-v1.3: together.ai
                lmsys/vicuna-7b-v1.3: together.ai
                lmsys/fastchat-t5-3b-v1.0: together.ai
                togethercomputer/mpt-30b-chat: together.ai
                togethercomputer/mpt-7b-chat: together.ai
                NousResearch/Nous-Hermes-Llama2-70b: together.ai
                Qwen/Qwen-7B-Chat: together.ai
                Qwen/Qwen-14B-Chat: together.ai
                tiiuae/falcon-7b-instruct: together.ai
                tiiuae/falcon-40b-instruct: together.ai
                togethercomputer/guanaco-13b: together.ai
                togethercomputer/guanaco-33b: together.ai
                togethercomputer/guanaco-65b: together.ai
                togethercomputer/guanaco-7b: together.ai
                togethercomputer/GPT-NeoXT-Chat-Base-20B: together.ai
                togethercomputer/Pythia-Chat-Base-7B-v0.16: together.ai
                defog/sqlcoder: together.ai
                EleutherAI/gpt-j-6b: together.ai
                EleutherAI/gpt-neox-20b: together.ai
                EleutherAI/llemma_7b: together.ai
                EleutherAI/pythia-12b-v0: together.ai
                EleutherAI/pythia-1b-v0: together.ai
                EleutherAI/pythia-2.8b-v0: together.ai
                EleutherAI/pythia-6.9b: together.ai
                google/flan-t5-xl: together.ai
                google/flan-t5-xxl: together.ai
                huggyllama/llama-7b: together.ai
                huggyllama/llama-13b: together.ai
                huggyllama/llama-30b: together.ai
                huggyllama/llama-65b: together.ai
                mosaicml/mpt-7b: together.ai
                mosaicml/mpt-7b-instruct: together.ai
                NousResearch/Nous-Hermes-13b: together.ai
                NumbersStation/nsql-6B: together.ai
                Qwen/Qwen-7B: together.ai
                Qwen/Qwen-14B: together.ai
                stabilityai/stablelm-base-alpha-3b: together.ai
                stabilityai/stablelm-base-alpha-7b: together.ai
                tiiuae/falcon-7b: together.ai
                tiiuae/falcon-40b: together.ai
                togethercomputer/GPT-JT-6B-v1: together.ai
                WizardLM/WizardLM-70B-V1.0: together.ai
                bigcode/starcoder: together.ai
                codellama/CodeLlama-70b-hf: together.ai
                NumbersStation/nsql-llama-2-7B: together.ai
                Phind/Phind-CodeLlama-34B-Python-v1: together.ai
                replit/replit-code-v1-3b: together.ai
                Salesforce/codegen2-16B: together.ai
                Salesforce/codegen2-7B: together.ai
                meta-llama/Llama-3-8b-chat-hf: together.ai
                meta-llama/Llama-3-70b-chat-hf: together.ai
                meta-llama/Llama-3-8b-hf: together.ai
                meta-llama/Meta-Llama-3-70B: together.ai
                meta-llama/LlamaGuard-2-8b: together.ai
                databricks/dbrx-instruct: together.ai
                mistralai/Mixtral-8x22B-Instruct-v0.1: together.ai
                mistralai/Mixtral-8x22B: together.ai
                gpt-4: openai
                gpt-4-0613: openai
                gpt-4-32k: openai
                gpt-4-32k-0613: openai
                gpt-3.5-turbo-0125: openai
                gpt-3.5-turbo: openai
                gpt-3.5-turbo-1106: openai
                gpt-3.5-turbo-instruct: openai
                gpt-3.5-turbo-16k: openai
                gpt-3.5-turbo-0613: openai
                gpt-3.5-turbo-16k-0613: openai
  /threads/{threadId}/runs:
    get:
      tags:
        - Threads > Runs
      summary: Get runs
      parameters:
        - name: threadId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Threads > Runs
      summary: Create run
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                assistant_id: 0058b312-ff12-4508-9893-10375dedc925
                stream: false
                metadata: {}
      parameters:
        - name: threadId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /threads/{threadId}/runs/{runId}:
    post:
      tags:
        - Threads > Runs
      summary: Update run
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                metadata: {}
      parameters:
        - name: threadId
          in: path
          schema:
            type: string
          required: true
        - name: runId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Threads > Runs
      summary: Get run
      parameters:
        - name: threadId
          in: path
          schema:
            type: string
          required: true
        - name: runId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /threads/{threadId}/messages:
    get:
      tags:
        - Threads > Messages
      summary: Get messages
      parameters:
        - name: limit
          in: query
          schema:
            type: string
        - name: order
          in: query
          schema:
            type: string
        - name: before
          in: query
          schema:
            type: string
        - name: after
          in: query
          schema:
            type: string
        - name: threadId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Threads > Messages
      summary: Create message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                role: user
                content: Why the sky is blue?
                metadata: {}
      parameters:
        - name: threadId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /threads/{threadId}/messages/{messageId}:
    get:
      tags:
        - Threads > Messages
      summary: Get message
      parameters:
        - name: threadId
          in: path
          schema:
            type: string
          required: true
        - name: messageId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Threads > Messages
      summary: Update message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                metadata: {}
      parameters:
        - name: threadId
          in: path
          schema:
            type: string
          required: true
        - name: messageId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /threads:
    post:
      tags:
        - Threads
      summary: Create thread
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                messages:
                  - role: user
                    content: What are you doing?
                metadata: {}
      responses:
        '201':
          description: Created
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Length:
              schema:
                type: integer
                example: '101'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Wed, 24 Apr 2024 07:37:56 GMT
            Etag:
              schema:
                type: string
                example: W/"65-ZMUAEplUbih0VY/ucxJH7zy5Kdo"
            X-Powered-By:
              schema:
                type: string
                example: Express
          content:
            application/json:
              schema:
                type: object
              example:
                id: 3a06d500-08fc-428e-862e-9a09099bf4c3
                object: thread
                created_at: 1713944276
                metadata: {}
  /assistants:
    get:
      tags:
        - Assistants
      summary: List your assistants
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Length:
              schema:
                type: integer
                example: '340'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Wed, 24 Apr 2024 07:14:13 GMT
            Etag:
              schema:
                type: string
                example: W/"154-o64XKfqEtd0/3f6WvJ7kooRvYbk"
            X-Powered-By:
              schema:
                type: string
                example: Express
          content:
            application/json:
              schema:
                type: object
              example:
                object: list
                data:
                  - id: 0058b312-ff12-4508-9893-10375dedc925
                    created_at: 1712828845
                    object: assistant
                    description: AI Chatbot
                    file_ids: []
                    instructions: >-
                      You are an AI Assistant. No matter what user says, respond
                      with Hello Sir!
                    metadata: {}
                    model: mistralai/Mistral-7B-Instruct-v0.1
                    name: AI Chatbot
                    tools: []
    post:
      tags:
        - Assistants
      summary: Create assistant
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Friendly assistant
                description: Always reply with the 'Hello Sir!'
                model: mistralai/Mistral-7B-Instruct-v0.1
                instructions: No matter what the user says, reply him with the 'Hello Sir'
                metadata: {}
      responses:
        '201':
          description: Created
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Length:
              schema:
                type: integer
                example: '331'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Wed, 24 Apr 2024 07:19:25 GMT
            Etag:
              schema:
                type: string
                example: W/"14b-VzG8LqfdCCdYy7WIn+Nl+yzqmI0"
            X-Powered-By:
              schema:
                type: string
                example: Express
          content:
            application/json:
              schema:
                type: object
              example:
                id: 6cd55ad8-3c4c-46fa-915e-7cb1ec0bf4a8
                object: assistant
                name: Friendly assistant
                description: Always reply with the 'Hello Sir!'
                model: mistralai/Mistral-7B-Instruct-v0.1
                created_at: 1713943165
                file_ids: []
                instructions: No matter what the user says, reply him with the 'Hello Sir'
                metadata: {}
                tools: []
  /assistants/{assistantId}:
    get:
      tags:
        - Assistants
      summary: Get assistant
      parameters:
        - name: assistantId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Length:
              schema:
                type: integer
                example: '313'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Wed, 24 Apr 2024 07:25:43 GMT
            Etag:
              schema:
                type: string
                example: W/"139-6MvScb7a/FzJUsfH0YoRmXQZf6Q"
            X-Powered-By:
              schema:
                type: string
                example: Express
          content:
            application/json:
              schema:
                type: object
              example:
                id: 0058b312-ff12-4508-9893-10375dedc925
                object: assistant
                created_at: 1712828845
                description: AI Chatbot
                file_ids: []
                instructions: >-
                  You are an AI Assistant. No matter what user says, respond
                  with Hello Sir!
                metadata: {}
                model: mistralai/Mistral-7B-Instruct-v0.1
                name: AI Chatbot
                tools: []
    post:
      tags:
        - Assistants
      summary: Update assistant
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                instructions: >-
                  You are an AI Assistant. No matter what user says, respond
                  with 'Hello, madam.'
      parameters:
        - name: assistantId
          in: path
          schema:
            type: string
          required: true
      responses:
        '201':
          description: Created
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Length:
              schema:
                type: integer
                example: '318'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Wed, 24 Apr 2024 07:28:58 GMT
            Etag:
              schema:
                type: string
                example: W/"13e-dM0QWoN3rbZBTDu+yRh06epz4Ww"
            X-Powered-By:
              schema:
                type: string
                example: Express
          content:
            application/json:
              schema:
                type: object
              example:
                id: 0058b312-ff12-4508-9893-10375dedc925
                object: assistant
                name: AI Chatbot
                description: AI Chatbot
                model: mistralai/Mistral-7B-Instruct-v0.1
                created_at: 1712828845
                file_ids: []
                instructions: >-
                  You are an AI Assistant. No matter what user says, respond
                  with 'Hello, madam.'
                metadata: {}
                tools: []
  /chat/completions:
    post:
      tags:
        - Chat
      summary: Create chat message completion
      description: You can read about parameters here.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                model: '{{llmModel}}'
                messages:
                  - role: user
                    content: Who won the world series in 2020?
                  - role: assistant
                    content: The Los Angeles Dodgers won the World Series in 2020.
                  - role: user
                    content: Where was it played?
                temperature: 1
                top_p: 1
                'n': 1
                stream: false
                max_tokens: 250
                presence_penalty: 0
                frequency_penalty: 0
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Length:
              schema:
                type: integer
                example: '568'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Mon, 22 Apr 2024 12:20:25 GMT
            Etag:
              schema:
                type: string
                example: W/"238-2D9iLg+dO3KTtrTjMwcYdpNqeQY"
            X-Powered-By:
              schema:
                type: string
                example: Express
          content:
            application/json:
              schema:
                type: object
              example:
                id: 878591576bebef4b-PDX
                object: chat.completion
                created: 1713788425
                model: mistralai/Mistral-7B-Instruct-v0.2
                prompt: []
                choices:
                  - finish_reason: eos
                    logprobs: null
                    index: 0
                    message:
                      role: assistant
                      content: ' The 2020 World Series was played at Globe Life Field in Arlington, Texas. It was played with no fans in attendance due to the COVID-19 pandemic. This was the first time in the history of the World Series that it was played in its entirety in a single site.'
                usage:
                  prompt_tokens: 52
                  completion_tokens: 64
                  total_tokens: 116
  /images/generations:
    post:
      tags:
        - Images
      summary: Create image
      description: Creates an image given a prompt.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                prompt: A cute baby sea otter
                'n': 2
                size: 1024x1024
                model: '{{ttiModel}}'
      responses:
        '201':
          description: Created
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Length:
              schema:
                type: integer
                example: '99761'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Mon, 22 Apr 2024 12:29:29 GMT
            Etag:
              schema:
                type: string
                example: W/"185b1-tGM+qC1dRdWHAD+KV0zIj0bgaW0"
            X-Powered-By:
              schema:
                type: string
                example: Express
          content:
            application/json:
              schema:
                type: object
              example:
                status: finished
                prompt:
                  - A cute baby sea otter
                model: stabilityai/stable-diffusion-xl-base-1.0
                model_owner: ''
                tags: {}
                num_returns: 2
                args:
                  model: stabilityai/stable-diffusion-xl-base-1.0
                  prompt: A cute baby sea otter
                  'n': 2
                  steps: 25
                  size: 1024x1024
                subjobs: []
                output:
                  choices:
                    - image_base64: >-
                        
                    - image_base64: >-
                        
                  request_id: 87859e8fddaf69d4-PDX
                  result_type: image-model-inference
  /completions:
    post:
      tags:
        - '[WIP] Completions'
      summary: Create completion
      description: Creates a completion for the provided prompt and parameters.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                model: '{{llmModel}}'
                prompt: Write a limmerick about APIs
                max_tokens: 250
                temperature: 0.7
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /stt:
    post:
      tags:
        - Voice
      summary: Speech To Text
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                model: '{{sstModel}}'
                url: >-
                  https://audio-samples.github.io/samples/mp3/blizzard_unconditional/sample-0.mp3
      responses:
        '201':
          description: Created
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Length:
              schema:
                type: integer
                example: '2821'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Wed, 08 May 2024 10:18:53 GMT
            Etag:
              schema:
                type: string
                example: W/"b05-3s5wbmIwoFQ7Zpi3CB62q8npC00"
            X-Powered-By:
              schema:
                type: string
                example: Express
          content:
            application/json:
              schema:
                type: object
              example:
                metadata:
                  transaction_key: deprecated
                  request_id: a6318d7e-b9ad-438a-99cd-c5a26044ad7b
                  sha256: >-
                    fbdd3587f273e3bd0d826e36a3868ca05dedc1a3f349faa5f28e52b5370b656f
                  created: '2024-05-08T10:18:52.928Z'
                  duration: 10.109375
                  channels: 1
                  models:
                    - 1abfe86b-e047-4eed-858a-35e5625b41ee
                  model_info:
                    1abfe86b-e047-4eed-858a-35e5625b41ee:
                      name: 2-general-nova
                      version: 2024-01-06.5664
                      arch: nova-2
                results:
                  channels:
                    - alternatives:
                        - transcript: >-
                            my thought i have nobody by a beauty and will as you
                            toward mister rochester is served in that so don't
                            find simpus and devoted to bowed to that might in a
                          confidence: 0.9334016
                          words:
                            - word: my
                              start: 0.24
                              end: 0.48
                              confidence: 0.7677139
                            - word: thought
                              start: 0.48
                              end: 0.88
                              confidence: 0.860146
                            - word: i
                              start: 0.88
                              end: 0.96
                              confidence: 0.9993
                            - word: have
                              start: 0.96
                              end: 1.1999999
                              confidence: 0.9975178
                            - word: nobody
                              start: 1.1999999
                              end: 1.5999999
                              confidence: 0.9981421
                            - word: by
                              start: 1.5999999
                              end: 1.7199999
                              confidence: 0.89347184
                            - word: a
                              start: 1.7199999
                              end: 1.8399999
                              confidence: 0.9539643
                            - word: beauty
                              start: 1.8399999
                              end: 2.1599998
                              confidence: 0.99679714
                            - word: and
                              start: 2.1599998
                              end: 2.32
                              confidence: 0.86830604
                            - word: will
                              start: 2.32
                              end: 2.48
                              confidence: 0.9836391
                            - word: as
                              start: 2.48
                              end: 2.6399999
                              confidence: 0.86166006
                            - word: you
                              start: 2.6399999
                              end: 2.8
                              confidence: 0.96505886
                            - word: toward
                              start: 2.8
                              end: 3.3
                              confidence: 0.57675695
                            - word: mister
                              start: 3.84
                              end: 4.16
                              confidence: 0.9973658
                            - word: rochester
                              start: 4.16
                              end: 4.66
                              confidence: 0.9987276
                            - word: is
                              start: 4.7999997
                              end: 4.96
                              confidence: 0.5949601
                            - word: served
                              start: 4.96
                              end: 5.2
                              confidence: 0.35592097
                            - word: in
                              start: 5.2
                              end: 5.3599997
                              confidence: 0.74498737
                            - word: that
                              start: 5.3599997
                              end: 5.6
                              confidence: 0.99769324
                            - word: so
                              start: 5.6
                              end: 5.8399997
                              confidence: 0.49508306
                            - word: don't
                              start: 5.8399997
                              end: 6.08
                              confidence: 0.9334016
                            - word: find
                              start: 6.08
                              end: 6.3999996
                              confidence: 0.97570974
                            - word: simpus
                              start: 6.3999996
                              end: 6.8999996
                              confidence: 0.7262915
                            - word: and
                              start: 7.2
                              end: 7.44
                              confidence: 0.9856228
                            - word: devoted
                              start: 7.44
                              end: 7.94
                              confidence: 0.99713933
                            - word: to
                              start: 8
                              end: 8.16
                              confidence: 0.9038218
                            - word: bowed
                              start: 8.16
                              end: 8.66
                              confidence: 0.68124074
                            - word: to
                              start: 9.084375
                              end: 9.164375
                              confidence: 0.9726658
                            - word: that
                              start: 9.164375
                              end: 9.484375
                              confidence: 0.22552642
                            - word: might
                              start: 9.484375
                              end: 9.644376
                              confidence: 0.9740415
                            - word: in
                              start: 9.644376
                              end: 9.876875
                              confidence: 0.88410664
                            - word: a
                              start: 9.876875
                              end: 10.109375
                              confidence: 0.5427023
  /tts:
    post:
      tags:
        - Voice
      summary: Text To Speech
      description: This request returns an audio file.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                model: '{{ttsModel}}'
                text: Hi! I'm your friendly assistant.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
